{"file_contents":{"replit.md":{"content":"# MobileBeats - React Native Music Player App\n\n## Overview\n\nMobileBeats is a React Native mobile music player application built with Expo. The app provides a modern music streaming interface with a dark purple theme, featuring a home screen with song listings and a dedicated player screen for music playback. The application uses React Navigation for screen transitions and includes mock song data for demonstration purposes.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React Native with Expo SDK ~51.0.28\n- **Navigation**: React Navigation v6 with stack-based navigation pattern\n- **UI Components**: Custom component architecture with reusable SongItem components\n- **Styling**: StyleSheet-based styling with consistent dark theme throughout\n\n### Screen Structure\n- **HomeScreen**: Main listing interface displaying available songs in a FlatList\n- **PlayerScreen**: Dedicated music player interface with playback controls and progress tracking\n- **Navigation Flow**: Stack navigator managing transitions between Home and Player screens\n\n### Component Architecture\n- **SongItem Component**: Reusable list item component for displaying song metadata\n- **Modular Design**: Clear separation between screens and components for maintainability\n- **State Management**: Local component state using React hooks (useState)\n\n### Design System\n- **Theme**: Dark mode design with purple accent colors (#9C4DCC)\n- **Color Palette**: Consistent color scheme defined in navigation theme\n- **Typography**: Bold headers with proper text hierarchy\n- **Layout**: Safe area handling and responsive design principles\n\n### Data Management\n- **Mock Data**: Currently uses hardcoded song data for demonstration\n- **Data Structure**: Song objects contain id, title, artist, and emoji-based cover art\n- **No Persistence**: No database or local storage implementation currently\n\n## External Dependencies\n\n### Core React Native Stack\n- **react-native**: 0.74.5 - Core React Native framework\n- **expo**: ~51.0.28 - Expo development platform and SDK\n- **react**: 18.2.0 - React library for component architecture\n\n### Navigation Libraries\n- **@react-navigation/native**: ^6.1.7 - Core navigation functionality\n- **@react-navigation/stack**: ^6.3.17 - Stack navigation implementation\n- **react-native-screens**: ~3.31.1 - Native screen management\n- **react-native-safe-area-context**: 4.10.5 - Safe area handling\n\n### UI and Interaction\n- **@expo/vector-icons**: ^14.0.2 - Icon library for UI elements\n- **react-native-gesture-handler**: ~2.16.1 - Gesture recognition and handling\n- **expo-status-bar**: ~1.12.1 - Status bar configuration\n\n### Development Tools\n- **@babel/core**: ^7.20.0 - JavaScript compiler for React Native\n- **@expo/metro-runtime**: ~3.2.3 - Metro bundler runtime for Expo\n\n### Web Support\n- **react-dom**: 18.2.0 - React DOM for web platform support\n- **react-native-web**: ~0.19.10 - Web implementation of React Native components\n\nNote: The application currently lacks audio playback functionality and uses mock data. Future iterations may require audio libraries, state management solutions, and backend integration for real music streaming capabilities.","size_bytes":3253},"src/App.js":{"content":"import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport HomeScreen from './screens/HomeScreen';\nimport PlayerScreen from './screens/PlayerScreen';\nimport './index.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<HomeScreen />} />\n          <Route path=\"/player\" element={<PlayerScreen />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","size_bytes":497},"src/index.css":{"content":"* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background-color: #0A0A0A;\n  color: #FFFFFF;\n  height: 100vh;\n  overflow-x: hidden;\n}\n\n#root {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n/* App Container */\n.app {\n  height: 100vh;\n  background-color: #0A0A0A;\n  display: flex;\n  flex-direction: column;\n}\n\n/* Header */\n.header {\n  background-color: #0A0A0A;\n  border-bottom: 1px solid #2A2A2A;\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  min-height: 60px;\n}\n\n.header-title {\n  font-size: 24px;\n  font-weight: bold;\n  color: #9C4DCC;\n  margin: 0;\n}\n\n.header-back {\n  background: none;\n  border: none;\n  color: #FFFFFF;\n  font-size: 18px;\n  cursor: pointer;\n  padding: 8px;\n  border-radius: 4px;\n}\n\n.header-back:hover {\n  background-color: #2A2A2A;\n}\n\n.header-subtitle {\n  font-size: 18px;\n  font-weight: 600;\n  color: #FFFFFF;\n  margin: 0;\n}\n\n/* Home Screen */\n.home-container {\n  flex: 1;\n  background-color: #0A0A0A;\n  display: flex;\n  flex-direction: column;\n}\n\n.home-header {\n  padding: 15px 20px;\n  border-bottom: 1px solid #2A2A2A;\n}\n\n.home-subtitle {\n  font-size: 16px;\n  color: #CCCCCC;\n  font-weight: 500;\n  margin: 0;\n}\n\n.song-list {\n  flex: 1;\n  overflow-y: auto;\n  padding: 10px 0;\n}\n\n/* Song Item */\n.song-item {\n  display: flex;\n  align-items: center;\n  padding: 12px 20px;\n  background-color: #0A0A0A;\n  border-bottom: 1px solid #1A1A1A;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.song-item:hover {\n  background-color: #1A1A1A;\n}\n\n.song-cover {\n  width: 60px;\n  height: 60px;\n  border-radius: 8px;\n  background-color: #2A2A2A;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 15px;\n  font-size: 24px;\n}\n\n.song-text {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.song-title {\n  font-size: 16px;\n  font-weight: 600;\n  color: #FFFFFF;\n  margin-bottom: 4px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.song-artist {\n  font-size: 14px;\n  color: #CCCCCC;\n  font-weight: 400;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.song-play-indicator {\n  width: 30px;\n  height: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.song-play-icon {\n  font-size: 16px;\n  color: #9C4DCC;\n  font-weight: bold;\n}\n\n/* Player Screen */\n.player-container {\n  flex: 1;\n  background-color: #0A0A0A;\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow: hidden;\n}\n\n.player-cover-section {\n  flex: 2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 40px 0;\n}\n\n.player-cover {\n  width: 280px;\n  height: 280px;\n  border-radius: 20px;\n  background-color: #2A2A2A;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0 10px 20px rgba(156, 77, 204, 0.3);\n  font-size: 120px;\n}\n\n.player-info {\n  text-align: center;\n  padding: 20px 0;\n}\n\n.player-title {\n  font-size: 28px;\n  font-weight: bold;\n  color: #FFFFFF;\n  margin: 0 0 8px 0;\n}\n\n.player-artist {\n  font-size: 18px;\n  color: #CCCCCC;\n  margin: 0;\n}\n\n.player-progress {\n  padding: 30px 0;\n}\n\n.progress-bar {\n  height: 4px;\n  background-color: #2A2A2A;\n  border-radius: 2px;\n  margin-bottom: 10px;\n  position: relative;\n  cursor: pointer;\n}\n\n.progress-fill {\n  height: 100%;\n  background-color: #9C4DCC;\n  border-radius: 2px;\n  transition: width 0.1s;\n}\n\n.progress-thumb {\n  position: absolute;\n  top: -6px;\n  width: 16px;\n  height: 16px;\n  background-color: #9C4DCC;\n  border-radius: 8px;\n  margin-left: -8px;\n  cursor: pointer;\n}\n\n.progress-time {\n  display: flex;\n  justify-content: space-between;\n}\n\n.time-text {\n  font-size: 14px;\n  color: #CCCCCC;\n}\n\n.player-controls {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px 0;\n  gap: 30px;\n}\n\n.control-button {\n  background: none;\n  border: none;\n  color: #FFFFFF;\n  cursor: pointer;\n  padding: 15px;\n  border-radius: 50%;\n  transition: background-color 0.2s;\n  font-size: 32px;\n}\n\n.control-button:hover {\n  background-color: #2A2A2A;\n}\n\n.play-button {\n  width: 80px;\n  height: 80px;\n  background-color: #9C4DCC;\n  border: none;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  box-shadow: 0 5px 10px rgba(156, 77, 204, 0.4);\n  transition: all 0.2s;\n  font-size: 36px;\n  color: #FFFFFF;\n}\n\n.play-button:hover {\n  transform: scale(1.05);\n  box-shadow: 0 8px 15px rgba(156, 77, 204, 0.6);\n}\n\n.player-bottom {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 20px 0;\n}\n\n.icon-button {\n  background: none;\n  border: none;\n  color: #CCCCCC;\n  cursor: pointer;\n  padding: 10px;\n  border-radius: 50%;\n  transition: all 0.2s;\n  font-size: 24px;\n}\n\n.icon-button:hover {\n  color: #9C4DCC;\n  background-color: #2A2A2A;\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .player-container {\n    padding: 20px;\n  }\n  \n  .player-cover {\n    width: 220px;\n    height: 220px;\n    font-size: 100px;\n  }\n  \n  .player-title {\n    font-size: 24px;\n  }\n  \n  .player-artist {\n    font-size: 16px;\n  }\n}","size_bytes":5415},"src/index.js":{"content":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);","size_bytes":253},"src/components/SongItem.js":{"content":"import React from 'react';\n\nexport default function SongItem({ song, onPress }) {\n  return (\n    <div className=\"song-item\" onClick={onPress}>\n      <div className=\"song-cover\">\n        <span>{song.cover}</span>\n      </div>\n      \n      <div className=\"song-text\">\n        <div className=\"song-title\">\n          {song.title}\n        </div>\n        <div className=\"song-artist\">\n          {song.artist}\n        </div>\n      </div>\n      \n      <div className=\"song-play-indicator\">\n        <span className=\"song-play-icon\">▶</span>\n      </div>\n    </div>\n  );\n}","size_bytes":564},"src/screens/HomeScreen.js":{"content":"import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SongItem from '../components/SongItem';\n\n// Mock data for demonstration\nconst mockSongs = [\n  {\n    id: '1',\n    title: 'Blinding Lights',\n    artist: 'The Weeknd',\n    cover: '🎵',\n  },\n  {\n    id: '2',\n    title: 'Watermelon Sugar',\n    artist: 'Harry Styles',\n    cover: '🎶',\n  },\n  {\n    id: '3',\n    title: 'Levitating',\n    artist: 'Dua Lipa',\n    cover: '🎤',\n  },\n  {\n    id: '4',\n    title: 'Good 4 U',\n    artist: 'Olivia Rodrigo',\n    cover: '🎸',\n  },\n  {\n    id: '5',\n    title: 'Stay',\n    artist: 'The Kid LAROI & Justin Bieber',\n    cover: '🎧',\n  },\n  {\n    id: '6',\n    title: 'Industry Baby',\n    artist: 'Lil Nas X & Jack Harlow',\n    cover: '🎼',\n  },\n  {\n    id: '7',\n    title: 'Bad Habits',\n    artist: 'Ed Sheeran',\n    cover: '🎺',\n  },\n  {\n    id: '8',\n    title: 'Heat Waves',\n    artist: 'Glass Animals',\n    cover: '🎹',\n  },\n];\n\nexport default function HomeScreen() {\n  const navigate = useNavigate();\n\n  const handleSongPress = (song) => {\n    navigate('/player', { state: { song } });\n  };\n\n  return (\n    <div className=\"home-container\">\n      <div className=\"header\">\n        <h1 className=\"header-title\">MobileBeats</h1>\n      </div>\n      \n      <div className=\"home-header\">\n        <p className=\"home-subtitle\">Your Music Library</p>\n      </div>\n      \n      <div className=\"song-list\">\n        {mockSongs.map((song) => (\n          <SongItem \n            key={song.id} \n            song={song} \n            onPress={() => handleSongPress(song)} \n          />\n        ))}\n      </div>\n    </div>\n  );\n}","size_bytes":1640},"src/screens/PlayerScreen.js":{"content":"import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nexport default function PlayerScreen() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { song } = location.state || { song: { title: 'Unknown', artist: 'Unknown', cover: '🎵' } };\n  \n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(45);\n  const [duration] = useState(180);\n\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const progressPercentage = Math.min(Math.max((currentTime / duration) * 100, 0), 100);\n\n  return (\n    <div className=\"player-container\">\n      <div className=\"header\">\n        <button className=\"header-back\" onClick={() => navigate('/')}>\n          ← Back\n        </button>\n        <h2 className=\"header-subtitle\">Now Playing</h2>\n        <div></div>\n      </div>\n\n      <div className=\"player-cover-section\">\n        <div className=\"player-cover\">\n          <span>{song.cover}</span>\n        </div>\n      </div>\n\n      <div className=\"player-info\">\n        <h1 className=\"player-title\">{song.title}</h1>\n        <p className=\"player-artist\">{song.artist}</p>\n      </div>\n\n      <div className=\"player-progress\">\n        <div className=\"progress-bar\">\n          <div \n            className=\"progress-fill\" \n            style={{ width: `${progressPercentage}%` }}\n          />\n          <div \n            className=\"progress-thumb\" \n            style={{ left: `${progressPercentage}%` }}\n          />\n        </div>\n        <div className=\"progress-time\">\n          <span className=\"time-text\">{formatTime(currentTime)}</span>\n          <span className=\"time-text\">{formatTime(duration)}</span>\n        </div>\n      </div>\n\n      <div className=\"player-controls\">\n        <button className=\"control-button\">\n          ⏮\n        </button>\n\n        <button className=\"play-button\" onClick={togglePlayPause}>\n          {isPlaying ? '⏸' : '▶'}\n        </button>\n\n        <button className=\"control-button\">\n          ⏭\n        </button>\n      </div>\n\n      <div className=\"player-bottom\">\n        <button className=\"icon-button\">\n          🔀\n        </button>\n        <button className=\"icon-button\">\n          🔁\n        </button>\n        <button className=\"icon-button\">\n          🤍\n        </button>\n      </div>\n    </div>\n  );\n}","size_bytes":2556}},"version":1}